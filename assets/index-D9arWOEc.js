(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&n(s)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const c=document.querySelector("[data-id='app']"),i=c==null?void 0:c.querySelector("[data-id='temperatureData']");async function u(){i&&(await l()).data.filter(r=>{if(r.metadata.dataType=="temperature")return r}).forEach(r=>{const n=r.value,e=new Date(r.timestamp),t=document.createElement("div");t.textContent=`Temperature: ${n}Â°C, Date: ${e.toLocaleString()}`,i.appendChild(t)})}u();async function l(){try{return await(await fetch("https://metrics.ubiad.pl/v1.0/measurements")).json()}catch(o){return console.error(o),null}}
